volumes:
  platformio_cache:
  esphome_builds:
  esphome_config:

services:
  # 1. Compile the Arduino firmware
  compile-arduino:
    build:
      context: .
      dockerfile: ./.docker/esphome/Dockerfile
    volumes:
      - .:/data
      - platformio_cache:/cache
      - esphome_builds:/builds
      - esphome_config:/data/.docker/esphome/.esphome
    working_dir: /builds
    command: ["compile", "/data/.docker/esphome/test-arduino.yaml"]

  # 2. Run the Arduino firmware on QEMU
  test-arduino:
    build:
      context: ./.docker/qemu
      dockerfile: Dockerfile
    volumes:
      - esphome_builds:/builds
    working_dir: /builds
    command: ["test-mouse-jiggler-arduino"]
    depends_on:
      compile-arduino:
        condition: service_completed_successfully

  # 3. Compile the ESP-IDF firmware
  compile-espidf:
    build:
      context: .
      dockerfile: ./.docker/esphome/Dockerfile
    volumes:
      - .:/data
      - platformio_cache:/cache
      - esphome_builds:/builds
      - esphome_config:/data/.docker/esphome/.esphome
    working_dir: /builds
    command: ["compile", "/data/.docker/esphome/test-espidf.yaml"]
    depends_on:
      test-arduino:
        condition: service_completed_successfully

  # 4. Run the ESP-IDF firmware on QEMU
  test-espidf:
    build:
      context: ./.docker/qemu
      dockerfile: Dockerfile
    volumes:
      - esphome_builds:/builds
    working_dir: /builds
    command: ["test-mouse-jiggler-espidf"]
    depends_on:
      compile-espidf:
        condition: service_completed_successfully
